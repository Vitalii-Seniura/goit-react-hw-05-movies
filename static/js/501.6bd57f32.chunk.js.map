{"version":3,"file":"static/js/501.6bd57f32.chunk.js","mappings":"8VACaA,EAAY,8BAEnBC,EAAS,mCAAG,kGAASC,EAAT,EAASA,SAAT,IAAmBC,MAAAA,OAAnB,MAA2B,CAAC,EAA5B,EAChBC,IAAAA,SAAAA,QAAyB,+BAEnBC,EAAc,IAAIC,iBAAJ,QAClBC,QAAS,oCACNJ,IALW,kBAOTC,IAAAA,IAAA,UACGF,EADH,YACeG,IACnBG,MAAK,SAAAC,GACJ,OAAwB,MAApBA,EAASC,OACJC,QAAQC,OAAR,iBAAyBH,EAASI,UAGP,IAAhCJ,EAASK,KAAKC,cACTJ,QAAQC,OAAO,8CAGjBH,EAASK,IACjB,IACAE,OAAM,SAAAC,GACL,OAAON,QAAQC,OAAOK,EACvB,KAtBa,2CAAH,sDAyBFC,EAAoB,WAC/B,OAAOjB,EAAU,CAAEC,SAAU,uBAC9B,EAEYiB,EAAyB,SAAAC,GACpC,OAAOnB,EAAU,CACfC,SAAU,gBACVC,MAAO,CAAEiB,MAAAA,IAEZ,EAEYC,EAAsB,SAAAC,GACjC,OAAOrB,EAAU,CACfC,SAAS,UAAD,OAAYoB,IAEvB,EACYC,EAAmB,SAAAD,GAC9B,OAAOrB,EAAU,CACfC,SAAS,UAAD,OAAYoB,EAAZ,aAEX,EAEYE,EAAsB,SAAAF,GACjC,OAAOrB,EAAU,CACfC,SAAS,UAAD,OAAYoB,EAAZ,aAEX,C,sGCKD,UAtDe,WACb,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAOF,EAAaG,IAAI,QACxBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAa,OAATJ,EAAJ,CACA,GAAa,KAATA,EACF,OAAOK,MAAM,YAEfT,EAAU,KAEVR,EAAAA,EAAAA,IAAuBY,GACpBvB,MAAK,SAAAC,GAAQ,OAAIA,EAAS4B,OAAb,IACb7B,MAAK,SAAA8B,GACJX,EAAUW,EACX,IACAtB,OAAM,SAAAuB,GACLC,QAAQC,IAAIF,EAAM1B,QACnB,GAbsB,CAc1B,GAAE,CAACkB,IASJ,OACE,iCACE,kBAAMW,SATW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfhB,EAAgB,CAAEC,KAAMc,EAAKd,KAAKgB,QAClCF,EAAKG,OACN,EAIiCC,UAAWC,EAAAA,EAAAA,KAAzC,WACE,kBAAOC,KAAK,OAAOpB,KAAK,OAAOkB,UAAWC,EAAAA,EAAAA,SAC1C,mBAAQC,KAAK,SAASF,UAAWC,EAAAA,EAAAA,UAAjC,wBAIF,0BACE,wBACGxB,EAAO0B,KAAI,SAAAC,GAAK,aACf,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAME,IAErBC,MAAO,CAAEC,KAAMxB,GAHjB,UAKE,kCAAoBoB,EAAMK,aAA1B,QAAmCL,EAAMM,gBAAhCN,EAAME,KAHVF,EAAME,GAHE,UAa1B,C,qBCzDD,KAAgB,UAAY,gCAAgC,KAAO,2BAA2B,IAAM,0BAA0B,KAAO,2BAA2B,MAAQ,4BAA4B,UAAY,gC","sources":["API.jsx","Pages/Movie/Movies.jsx","webpack://react-homework-template/./src/Pages/MovieDetails/MovieDetails.module.css?f582"],"sourcesContent":["import axios from 'axios';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/';\n\nconst getMovies = async ({ pathName, param = {} }) => {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n  const searchParam = new URLSearchParams({\n    api_key: '52716180676151a953209f62b256c6ee',\n    ...param,\n  });\n  return axios\n    .get(`${pathName}?${searchParam}`)\n    .then(response => {\n      if (response.status !== 200) {\n        return Promise.reject(`Error: ${response.message}`);\n      }\n\n      if (response.data.total_results === 0) {\n        return Promise.reject('Sorry, no matches found. Please try again.');\n      }\n\n      return response.data;\n    })\n    .catch(err => {\n      return Promise.reject(err);\n    });\n};\n\nexport const getTrendingMovies = () => {\n  return getMovies({ pathName: '/trending/movie/day' });\n};\n\nexport const getMoviesBySearchQuery = query => {\n  return getMovies({\n    pathName: '/search/movie',\n    param: { query },\n  });\n};\n\nexport const getMovieDetailsById = movieId => {\n  return getMovies({\n    pathName: `/movie/${movieId}`,\n  });\n};\nexport const getMovieCastById = movieId => {\n  return getMovies({\n    pathName: `/movie/${movieId}/credits`,\n  });\n};\n\nexport const getMovieReviewsById = movieId => {\n  return getMovies({\n    pathName: `/movie/${movieId}/reviews`,\n  });\n};\n","import React, { useState, useEffect } from 'react';\nimport { getMoviesBySearchQuery } from '../../API';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport css from '../MovieDetails/MovieDetails.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const name = searchParams.get('name');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (name === null) return;\n    if (name === '') {\n      return alert('not name');\n    }\n    setMovies([]);\n\n    getMoviesBySearchQuery(name)\n      .then(response => response.results)\n      .then(films => {\n        setMovies(films);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  }, [name]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ name: form.name.value });\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <input type=\"text\" name=\"name\" className={css.input} />\n        <button type=\"submit\" className={css.input_btn}>\n          Search\n        </button>\n      </form>\n      <div>\n        <ul>\n          {movies.map(movie => (\n            <Link\n              to={`/movies/${movie.id}`}\n              key={movie.id}\n              state={{ from: location }}\n            >\n              <li key={movie.id}>{movie.title ?? movie.original_title}</li>\n            </Link>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__6fEfu\",\"page\":\"MovieDetails_page__toqZW\",\"btn\":\"MovieDetails_btn__qOcdK\",\"form\":\"MovieDetails_form__SUhRW\",\"input\":\"MovieDetails_input__t92rt\",\"input_btn\":\"MovieDetails_input_btn__anL8-\"};"],"names":["IMAGE_URL","getMovies","pathName","param","axios","searchParam","URLSearchParams","api_key","then","response","status","Promise","reject","message","data","total_results","catch","err","getTrendingMovies","getMoviesBySearchQuery","query","getMovieDetailsById","movieId","getMovieCastById","getMovieReviewsById","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","name","get","location","useLocation","useEffect","alert","results","films","error","console","log","onSubmit","e","preventDefault","form","currentTarget","value","reset","className","css","type","map","movie","to","id","state","from","title","original_title"],"sourceRoot":""}