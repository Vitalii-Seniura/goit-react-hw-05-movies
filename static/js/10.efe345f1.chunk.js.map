{"version":3,"file":"static/js/10.efe345f1.chunk.js","mappings":"6VACaA,EAAY,8BAEnBC,EAAS,mCAAG,kGAASC,EAAT,EAASA,SAAT,IAAmBC,MAAAA,OAAnB,MAA2B,CAAC,EAA5B,EAChBC,IAAAA,SAAAA,QAAyB,+BAEnBC,EAAc,IAAIC,iBAAJ,QAClBC,QAAS,oCACNJ,IALW,kBAOTC,IAAAA,IAAA,UACGF,EADH,YACeG,IACnBG,MAAK,SAAAC,GACJ,OAAwB,MAApBA,EAASC,OACJC,QAAQC,OAAR,iBAAyBH,EAASI,UAGP,IAAhCJ,EAASK,KAAKC,cACTJ,QAAQC,OAAO,8CAGjBH,EAASK,IACjB,IACAE,OAAM,SAAAC,GACL,OAAON,QAAQC,OAAOK,EACvB,KAtBa,2CAAH,sDAyBFC,EAAoB,WAC/B,OAAOjB,EAAU,CAAEC,SAAU,uBAC9B,EAEYiB,EAAyB,SAAAC,GACpC,OAAOnB,EAAU,CACfC,SAAU,gBACVC,MAAO,CAAEiB,MAAAA,IAEZ,EAEYC,EAAsB,SAAAC,GACjC,OAAOrB,EAAU,CACfC,SAAS,UAAD,OAAYoB,IAEvB,EACYC,EAAmB,SAAAD,GAC9B,OAAOrB,EAAU,CACfC,SAAS,UAAD,OAAYoB,EAAZ,aAEX,EAEYE,EAAsB,SAAAF,GACjC,OAAOrB,EAAU,CACfC,SAAS,UAAD,OAAYoB,EAAZ,aAEX,C,gHCyBD,UAnEsB,WAAO,IAAD,IACpBG,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,EAASI,OACrB,IAAMC,EAAY,oBAAGL,EAASI,aAAZ,aAAG,EAAgBE,YAAnB,QAA2B,IAErCT,GAAYU,EAAAA,EAAAA,MAAZV,QACR,GAAkCW,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KAEQC,EAAuDF,EAAvDE,YAAaC,EAA0CH,EAA1CG,MAAOC,EAAmCJ,EAAnCI,aAAcC,EAAqBL,EAArBK,SAAUC,EAAWN,EAAXM,OAWpD,OATAC,EAAAA,EAAAA,YAAU,YACRpB,EAAAA,EAAAA,IAAoBC,GACjBd,MAAK,SAAAkC,GACJP,EAAaO,EACd,IACA1B,OAAM,SAAAC,GAAG,OAAI0B,EAAAA,GAAAA,MAAY1B,EAAhB,GACb,GAAE,CAACK,IACJK,QAAQC,IAAIH,IAGV,iBAAKmB,UAAWC,EAAAA,EAAAA,KAAhB,WACE,mBAAQC,KAAK,SAASF,UAAWC,EAAAA,EAAAA,IAAjC,UACE,SAAC,KAAD,CAAME,GAAIjB,EAAV,yBAED,OAACI,QAAD,IAACA,GAAAA,EAAWc,UACX,iCACE,yBACGZ,GACC,gBAAKa,IAAG,UAAKjD,EAAAA,GAAL,gBAAsBoC,GAAec,IAAKb,KAElD,uCAGJ,wBAAKA,KACL,wCAAgBC,EAAeA,EAAaa,QAAQ,GAAK,QACzD,qCACA,uBAAIZ,GAAY,OAChB,mCACA,wBAAU,OAANC,QAAM,IAANA,OAAA,EAAAA,EAAQY,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,QAAS,OAEnD,iBAAKX,UAAWC,EAAAA,EAAAA,UAAhB,oCAEE,2BACE,yBACE,SAAC,KAAD,CAAShB,MAAOJ,EAASI,MAAOkB,GAAG,OAAnC,qBAIF,yBACE,SAAC,KAAD,CAASlB,MAAOJ,EAASI,MAAOkB,GAAG,UAAnC,8BAON,+BACE,SAAC,EAAAS,SAAD,CAAUC,SAAU,aAApB,UACE,SAAC,KAAD,aAOb,C,qBC5ED,KAAgB,UAAY,gCAAgC,KAAO,2BAA2B,IAAM,0BAA0B,KAAO,2BAA2B,MAAQ,4BAA4B,UAAY,gC","sources":["API.jsx","Pages/MovieDetails/MovieDetails.jsx","webpack://react-homework-template/./src/Pages/MovieDetails/MovieDetails.module.css?f582"],"sourcesContent":["import axios from 'axios';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/';\n\nconst getMovies = async ({ pathName, param = {} }) => {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n  const searchParam = new URLSearchParams({\n    api_key: '52716180676151a953209f62b256c6ee',\n    ...param,\n  });\n  return axios\n    .get(`${pathName}?${searchParam}`)\n    .then(response => {\n      if (response.status !== 200) {\n        return Promise.reject(`Error: ${response.message}`);\n      }\n\n      if (response.data.total_results === 0) {\n        return Promise.reject('Sorry, no matches found. Please try again.');\n      }\n\n      return response.data;\n    })\n    .catch(err => {\n      return Promise.reject(err);\n    });\n};\n\nexport const getTrendingMovies = () => {\n  return getMovies({ pathName: '/trending/movie/day' });\n};\n\nexport const getMoviesBySearchQuery = query => {\n  return getMovies({\n    pathName: '/search/movie',\n    param: { query },\n  });\n};\n\nexport const getMovieDetailsById = movieId => {\n  return getMovies({\n    pathName: `/movie/${movieId}`,\n  });\n};\nexport const getMovieCastById = movieId => {\n  return getMovies({\n    pathName: `/movie/${movieId}/credits`,\n  });\n};\n\nexport const getMovieReviewsById = movieId => {\n  return getMovies({\n    pathName: `/movie/${movieId}/reviews`,\n  });\n};\n","import {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { Suspense, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport css from './MovieDetails.module.css';\nimport { getMovieDetailsById, IMAGE_URL } from '../../API';\n\nconst MoviesDetails = () => {\n  const location = useLocation();\n  console.log(location.state);\n  const backLinkHref = location.state?.from ?? '/';\n  //   const { state } = useLocation();\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState({});\n\n  const { poster_path, title, vote_average, overview, genres } = movieData;\n\n  useEffect(() => {\n    getMovieDetailsById(movieId)\n      .then(results => {\n        setMovieData(results);\n      })\n      .catch(err => toast.error(err));\n  }, [movieId]);\n  console.log(location);\n\n  return (\n    <div className={css.page}>\n      <button type=\"button\" className={css.btn}>\n        <Link to={backLinkHref}>Go back</Link>\n      </button>\n      {!movieData?.length && (\n        <>\n          <div>\n            {poster_path ? (\n              <img src={`${IMAGE_URL}w400/${poster_path}`} alt={title} />\n            ) : (\n              <p>no image</p>\n            )}\n          </div>\n          <h3>{title}</h3>\n          <p>User Score: {vote_average ? vote_average.toFixed(1) : '-'}</p>\n          <p>Overview</p>\n          <p>{overview || '-'}</p>\n          <p>Genres</p>\n          <p>{genres?.map(genre => genre.name).join(', ') || '-'}</p>\n\n          <div className={css.container}>\n            Additional information\n            <ul>\n              <li>\n                <NavLink state={location.state} to=\"cast\">\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink state={location.state} to=\"reviews\">\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n\n          <>\n            <Suspense fallback={'...loading'}>\n              <Outlet />\n            </Suspense>\n          </>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__6fEfu\",\"page\":\"MovieDetails_page__toqZW\",\"btn\":\"MovieDetails_btn__qOcdK\",\"form\":\"MovieDetails_form__SUhRW\",\"input\":\"MovieDetails_input__t92rt\",\"input_btn\":\"MovieDetails_input_btn__anL8-\"};"],"names":["IMAGE_URL","getMovies","pathName","param","axios","searchParam","URLSearchParams","api_key","then","response","status","Promise","reject","message","data","total_results","catch","err","getTrendingMovies","getMoviesBySearchQuery","query","getMovieDetailsById","movieId","getMovieCastById","getMovieReviewsById","location","useLocation","console","log","state","backLinkHref","from","useParams","useState","movieData","setMovieData","poster_path","title","vote_average","overview","genres","useEffect","results","toast","className","css","type","to","length","src","alt","toFixed","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}